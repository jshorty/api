// Reference: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./generated/type-graphql"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------------------------------------------------------
// Design tokens

model DesignToken {
  // Unique ID generated by the database)
  id String @id @default(cuid())

  // Name of the design token
  name String @unique

  // Description of the design token
  description String?

  // Components that use this design token
  usedByComponents Component[]
}

// -----------------------------------------------------------------------------
// Components

model Component {
  // Unique ID generated by the database
  id String @id @default(cuid())

  // Name of the component (in sentence case)
  name String @unique

  // Description of the component
  description String? // TODO: Should this be required?

  // Design tokens that are used by this component
  designTokensUsed DesignToken[]

  // Octicons that are used by this component
  octiconsUsed Octicon[]

  // Implementations of the component
  implementations ComponentImpl[]
}

model ComponentImpl {
  // Unique ID generated by the database
  id String @id @default(cuid())

  // Component being implemented
  component     Component @relation(fields: [componentName], references: [name])
  componentName String // TODO: Should this be optional to allow for implementation-specific components?

  // Framework used to implement the component
  framework ComponentFrameworkEnum

  // Status of the implementation
  status ComponentImplStatusEnum

  // Link to the source code for the component in GitHub
  source String?

  @@unique([componentName, framework])
}

// TODO: Account for sub-components

enum ComponentFrameworkEnum {
  REACT
  RAILS
  FIGMA
}

// TODO: Revisit component statuses
enum ComponentImplStatusEnum {
  ALPHA
  BETA
  STABLE
  DEPRECATED
}

// Proposed statuses:
// - NOT_PLANNED
// - PLANNED
// - IN_PROGRESS
// - READY
// - NEEDS_WORK
// - NOT_RECOMMENDED

// -----------------------------------------------------------------------------
// Octicons

model Octicon {
  // The ID of the octicon (generated by the database)
  id String @id @default(cuid())

  // The name of the octicon
  name String @unique

  // A description of the octicon
  description String?

  // Components that use this octicon
  usedByComponents Component[]
}
